{"version":3,"file":"ReporterRuntime.js","names":["_path","require","_model","_LifecycleState","_Notifier","_factory","_testplan","_utils","_attachments","_loader","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classPrivateFieldInitSpec","a","_checkPrivateRedeclaration","set","has","TypeError","_classPrivateFieldGet","s","get","_assertClassBrand","n","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","String","Number","DefaultStepStack","constructor","Map","stepsByRoot","clear","rootsByStep","rootUuid","maybeValue","delete","stepUuid","removeStep","newValue","_handleMetadataMessage","WeakMap","_handleStepMetadataMessage","_handleStartStepMessage","_handleStopStepMessage","_handleAttachmentContentMessage","_handleAttachmentPathMessage","_findParent","_writeFixturesOfScope","_writeContainer","_calculateTimings","ReporterRuntime","_ref","_this","writer","listeners","environmentInfo","categories","links","globalLabels","LifecycleState","uuid","randomUuid","state","setScope","updateFunc","scope","getScope","console","error","concat","deleteScope","scopeUuid","type","fixtureResult","wrappedFixture","setFixtureResult","createFixtureResult","start","Date","now","fixtures","fixture","getFixtureResult","opts","startStop","stop","duration","stage","Stage","FINISHED","result","scopeUuids","undefined","testResult","createTestResult","deepClone","notifier","beforeTestResultStart","tests","setTestResult","afterTestResultStart","getTestResult","beforeTestResultUpdate","afterTestResultUpdate","_testResult$testCaseI","_testResult$historyId","wrapped","getWrappedTestResult","beforeTestResultStop","labels","parameters","description","_testResult$descripti","descriptionHtml","_testResult$descripti2","testCaseId","getTestResultTestCaseId","historyId","getTestResultHistoryId","afterTestResultStop","hasSkipLabel","deleteTestResult","beforeTestResultWrite","writeResult","afterTestResultWrite","stepStack","currentStep","parentStepUuid","parent","JSON","stringify","stepResult","createStepResult","steps","setStepResult","addStep","step","getStepResult","beforeStepStop","afterStepStop","attachmentName","attachmentContentOrPath","options","_options$fileExtensio","isPath","fileExtension","extname","attachmentFileName","buildAttachmentFileName","contentType","writeAttachmentFromPath","writeAttachment","attachment","name","source","wrapInStep","timestamp","attachments","writeEnvironmentInfo","serializedCategories","map","c","messageRegex","RegExp","traceRegex","writeCategoriesDefinitions","messages","message","data","getWrappedFixtureResult","displayName","updateFixture","updateScope","linkConfig","formatLinks","updateTest","updateStep","startStep","status","statusDetails","stopStep","Buffer","from","content","encoding","path","root","getExecutionItem","_ref2","writtenFixtures","Set","deleteFixtureResult","add","befores","afters","writeGroup","children","normalisedDuration","Math","max","round","resolveWriter","Notifier","Array","isArray","entries","flatMap","_ref3","v","exports"],"sources":["../../../../src/sdk/reporter/ReporterRuntime.ts"],"sourcesContent":["/* eslint max-lines: 0 */\nimport { extname } from \"path\";\nimport {\n  type Attachment,\n  type AttachmentOptions,\n  type FixtureResult,\n  type Label,\n  Stage,\n  type StepResult,\n  type TestResult,\n} from \"../../model.js\";\nimport type {\n  Category,\n  EnvironmentInfo,\n  RuntimeAttachmentContentMessage,\n  RuntimeAttachmentPathMessage,\n  RuntimeMessage,\n  RuntimeMetadataMessage,\n  RuntimeStartStepMessage,\n  RuntimeStepMetadataMessage,\n  RuntimeStopStepMessage,\n} from \"../types.js\";\nimport { LifecycleState } from \"./LifecycleState.js\";\nimport { Notifier } from \"./Notifier.js\";\nimport { createFixtureResult, createStepResult, createTestResult } from \"./factory.js\";\nimport { hasSkipLabel } from \"./testplan.js\";\nimport type {\n  FixtureResultWrapper,\n  FixtureType,\n  LinkConfig,\n  ReporterRuntimeConfig,\n  TestScope,\n  Writer,\n} from \"./types.js\";\nimport { deepClone, formatLinks, getTestResultHistoryId, getTestResultTestCaseId, randomUuid } from \"./utils.js\";\nimport { buildAttachmentFileName } from \"./utils/attachments.js\";\nimport { resolveWriter } from \"./writer/loader.js\";\n\ninterface StepStack {\n  clear(): void;\n\n  removeRoot(rootUuid: string): void;\n\n  currentStep(rootUuid: string): string | undefined;\n\n  addStep(rootUuid: string, stepUuid: string): void;\n\n  removeStep(stepUuid: string): void;\n}\n\nclass DefaultStepStack implements StepStack {\n  private stepsByRoot: Map<string, string[]> = new Map();\n  private rootsByStep: Map<string, string> = new Map();\n\n  clear = (): void => {\n    this.stepsByRoot.clear();\n    this.rootsByStep.clear();\n  };\n\n  removeRoot = (rootUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    this.stepsByRoot.delete(rootUuid);\n    if (maybeValue) {\n      maybeValue.forEach((stepUuid) => this.rootsByStep.delete(stepUuid));\n    }\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    return maybeValue[maybeValue.length - 1];\n  };\n\n  addStep = (rootUuid: string, stepUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      this.stepsByRoot.set(rootUuid, [stepUuid]);\n    } else {\n      maybeValue.push(stepUuid);\n    }\n    this.rootsByStep.set(stepUuid, rootUuid);\n  };\n\n  removeStep(stepUuid: string) {\n    const rootUuid = this.rootsByStep.get(stepUuid);\n    if (!rootUuid) {\n      return;\n    }\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    const newValue = maybeValue.filter((value) => value !== stepUuid);\n    this.stepsByRoot.set(rootUuid, newValue);\n  }\n}\n\nexport class ReporterRuntime {\n  private readonly state = new LifecycleState();\n  private notifier: Notifier;\n  private stepStack: StepStack = new DefaultStepStack();\n  writer: Writer;\n  categories?: Category[];\n  environmentInfo?: EnvironmentInfo;\n  linkConfig?: LinkConfig;\n  globalLabels: Label[] = [];\n\n  constructor({\n    writer,\n    listeners = [],\n    environmentInfo,\n    categories,\n    links,\n    globalLabels = {},\n  }: ReporterRuntimeConfig) {\n    this.writer = resolveWriter(writer);\n    this.notifier = new Notifier({ listeners });\n    this.categories = categories;\n    this.environmentInfo = environmentInfo;\n    this.linkConfig = links;\n\n    if (Array.isArray(globalLabels)) {\n      this.globalLabels = globalLabels;\n    } else if (Object.keys(globalLabels).length) {\n      this.globalLabels = Object.entries(globalLabels).flatMap(([name, value]) => {\n        if (Array.isArray(value)) {\n          return value.map((v) => ({ name, value: v }));\n        }\n\n        return {\n          name,\n          value,\n        };\n      });\n    }\n  }\n\n  startScope = (): string => {\n    const uuid = randomUuid();\n    this.state.setScope(uuid);\n    return uuid;\n  };\n\n  updateScope = (uuid: string, updateFunc: (scope: TestScope) => void): void => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not update scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(scope);\n  };\n\n  writeScope = (uuid: string) => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not write scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.#writeFixturesOfScope(scope);\n    this.state.deleteScope(scope.uuid);\n  };\n\n  startFixture = (scopeUuid: string, type: FixtureType, fixtureResult: Partial<FixtureResult>): string | undefined => {\n    const scope = this.state.getScope(scopeUuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not start fixture: no scope with uuid ${scopeUuid} is found`);\n      return;\n    }\n\n    const uuid = randomUuid();\n    const wrappedFixture = this.state.setFixtureResult(scopeUuid, uuid, type, {\n      ...createFixtureResult(),\n      start: Date.now(),\n      ...fixtureResult,\n    });\n\n    scope.fixtures.push(wrappedFixture);\n    return uuid;\n  };\n\n  updateFixture = (uuid: string, updateFunc: (result: FixtureResult) => void): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(fixture);\n  };\n\n  stopFixture = (uuid: string, opts?: { stop?: number; duration?: number }): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    const startStop = this.#calculateTimings(fixture.start, opts?.stop, opts?.duration);\n    fixture.start = startStop.start;\n    fixture.stop = startStop.stop;\n\n    fixture.stage = Stage.FINISHED;\n  };\n\n  startTest = (result: Partial<TestResult>, scopeUuids: string[] = []): string => {\n    const uuid = randomUuid();\n    const testResult: TestResult = {\n      ...createTestResult(uuid),\n      start: Date.now(),\n      ...deepClone(result),\n    };\n\n    this.notifier.beforeTestResultStart(testResult);\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n      if (!scope) {\n        // eslint-disable-next-line no-console\n        console.error(`count not link test to the scope: no scope with uuid ${uuid} is found`);\n        return;\n      }\n      scope.tests.push(uuid);\n    });\n\n    this.state.setTestResult(uuid, testResult, scopeUuids);\n    this.notifier.afterTestResultStart(testResult);\n    return uuid;\n  };\n\n  updateTest = (uuid: string, updateFunc: (result: TestResult) => void): void => {\n    const testResult = this.state.getTestResult(uuid);\n\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    this.notifier.beforeTestResultUpdate(testResult);\n    updateFunc(testResult);\n    this.notifier.afterTestResultUpdate(testResult);\n  };\n\n  stopTest = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const wrapped = this.state.getWrappedTestResult(uuid);\n    if (!wrapped) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    const testResult = wrapped.value;\n\n    this.notifier.beforeTestResultStop(testResult);\n\n    const scopeUuids = wrapped.scopeUuids;\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n\n      if (scope?.labels) {\n        testResult.labels = [...testResult.labels, ...scope.labels];\n      }\n\n      if (scope?.links) {\n        testResult.links = [...testResult.links, ...scope.links];\n      }\n\n      if (scope?.parameters) {\n        testResult.parameters = [...testResult.parameters, ...scope.parameters];\n      }\n\n      if (scope?.description) {\n        testResult.description = testResult.description ?? scope.description;\n      }\n\n      if (scope?.descriptionHtml) {\n        testResult.descriptionHtml = testResult.descriptionHtml ?? scope.descriptionHtml;\n      }\n    });\n\n    testResult.labels = [...this.globalLabels, ...testResult.labels];\n\n    testResult.testCaseId ??= getTestResultTestCaseId(testResult);\n    testResult.historyId ??= getTestResultHistoryId(testResult);\n\n    const startStop = this.#calculateTimings(testResult.start, opts?.stop, opts?.duration);\n\n    testResult.start = startStop.start;\n    testResult.stop = startStop.stop;\n\n    this.notifier.afterTestResultStop(testResult);\n  };\n\n  writeTest = (uuid: string) => {\n    const testResult = this.state.getTestResult(uuid);\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not write test result: no test with uuid ${uuid} is found`);\n      return;\n    }\n\n    if (hasSkipLabel(testResult.labels)) {\n      this.state.deleteTestResult(uuid);\n      return;\n    }\n\n    this.notifier.beforeTestResultWrite(testResult);\n\n    this.writer.writeResult(testResult);\n    this.state.deleteTestResult(uuid);\n\n    this.notifier.afterTestResultWrite(testResult);\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    return this.stepStack.currentStep(rootUuid);\n  };\n\n  startStep = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    result: Partial<StepResult>,\n  ): string | undefined => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not start test step: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      start: Date.now(),\n      ...result,\n    };\n    parent.steps.push(stepResult);\n    const stepUuid = randomUuid();\n    this.state.setStepResult(stepUuid, stepResult);\n\n    this.stepStack.addStep(rootUuid, stepUuid);\n\n    return stepUuid;\n  };\n\n  updateStep = (uuid: string, updateFunc: (stepResult: StepResult) => void) => {\n    const step = this.state.getStepResult(uuid)!;\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(step);\n  };\n\n  stopStep = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const step = this.state.getStepResult(uuid);\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.notifier.beforeStepStop(step);\n\n    const startStop = this.#calculateTimings(step.start, opts?.stop, opts?.duration);\n    step.start = startStop.start;\n    step.stop = startStop.stop;\n\n    step.stage = Stage.FINISHED;\n\n    this.stepStack.removeStep(uuid);\n\n    this.notifier.afterStepStop(step);\n  };\n\n  writeAttachment = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    attachmentName: string,\n    attachmentContentOrPath: Buffer | string,\n    options: AttachmentOptions & { wrapInStep?: boolean; timestamp?: number },\n  ) => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not write test attachment: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n\n    const isPath = typeof attachmentContentOrPath === \"string\";\n    const fileExtension = options.fileExtension ?? (isPath ? extname(attachmentContentOrPath) : undefined);\n    const attachmentFileName = buildAttachmentFileName({\n      contentType: options.contentType,\n      fileExtension,\n    });\n\n    if (isPath) {\n      this.writer.writeAttachmentFromPath(attachmentFileName, attachmentContentOrPath);\n    } else {\n      this.writer.writeAttachment(attachmentFileName, attachmentContentOrPath);\n    }\n\n    const attachment: Attachment = {\n      name: attachmentName,\n      source: attachmentFileName,\n      type: options.contentType,\n    };\n\n    if (options.wrapInStep) {\n      const { timestamp = Date.now() } = options;\n      parent.steps.push({\n        name: attachmentName,\n        attachments: [attachment],\n        start: timestamp,\n        stop: timestamp,\n      } as StepResult);\n    } else {\n      parent.attachments.push(attachment);\n    }\n  };\n\n  writeEnvironmentInfo = () => {\n    if (!this.environmentInfo) {\n      return;\n    }\n\n    this.writer.writeEnvironmentInfo(this.environmentInfo);\n  };\n\n  writeCategoriesDefinitions = () => {\n    if (!this.categories) {\n      return;\n    }\n\n    const serializedCategories = this.categories.map((c) => {\n      if (c.messageRegex instanceof RegExp) {\n        c.messageRegex = c.messageRegex.source;\n      }\n\n      if (c.traceRegex instanceof RegExp) {\n        c.traceRegex = c.traceRegex.source;\n      }\n\n      return c;\n    });\n\n    this.writer.writeCategoriesDefinitions(serializedCategories);\n  };\n\n  applyRuntimeMessages = (rootUuid: string, messages: RuntimeMessage[]) => {\n    messages.forEach((message) => {\n      switch (message.type) {\n        case \"metadata\":\n          this.#handleMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_metadata\":\n          this.#handleStepMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_start\":\n          this.#handleStartStepMessage(rootUuid, message.data);\n          return;\n        case \"step_stop\":\n          this.#handleStopStepMessage(rootUuid, message.data);\n          return;\n        case \"attachment_content\":\n          this.#handleAttachmentContentMessage(rootUuid, message.data);\n          return;\n        case \"attachment_path\":\n          this.#handleAttachmentPathMessage(rootUuid, message.data);\n          return;\n        default:\n          // eslint-disable-next-line no-console\n          console.error(`could not apply runtime messages: unknown message ${JSON.stringify(message)}`);\n          return;\n      }\n    });\n  };\n\n  #handleMetadataMessage = (rootUuid: string, message: RuntimeMetadataMessage[\"data\"]) => {\n    // only display name could be set to fixture.\n    const fixtureResult = this.state.getWrappedFixtureResult(rootUuid);\n    const { links, labels, parameters, displayName, testCaseId, historyId, description, descriptionHtml } = message;\n\n    if (fixtureResult) {\n      if (displayName) {\n        this.updateFixture(rootUuid, (result) => {\n          result.name = displayName;\n        });\n      }\n\n      if (historyId) {\n        // eslint-disable-next-line no-console\n        console.error(\"historyId can't be changed within test fixtures\");\n      }\n      if (testCaseId) {\n        // eslint-disable-next-line no-console\n        console.error(\"testCaseId can't be changed within test fixtures\");\n      }\n\n      if (links || labels || parameters || description || descriptionHtml) {\n        // in some frameworks, afterEach methods can be executed before test stop event, while\n        // in others after. To remove the possible undetermined behaviour we only allow\n        // using runtime metadata API in before hooks.\n        if (fixtureResult.type === \"after\") {\n          // eslint-disable-next-line no-console\n          console.error(\"metadata messages isn't supported for after test fixtures\");\n          return;\n        }\n\n        this.updateScope(fixtureResult.scopeUuid, (scope) => {\n          if (links) {\n            scope.links = [...scope.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n          }\n          if (labels) {\n            scope.labels = [...scope.labels, ...labels];\n          }\n          if (parameters) {\n            scope.parameters = [...scope.parameters, ...parameters];\n          }\n          if (description) {\n            scope.description = description;\n          }\n          if (descriptionHtml) {\n            scope.descriptionHtml = descriptionHtml;\n          }\n        });\n      }\n\n      return;\n    }\n\n    this.updateTest(rootUuid, (result) => {\n      if (links) {\n        result.links = [...result.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n      }\n      if (labels) {\n        result.labels = [...result.labels, ...labels];\n      }\n      if (parameters) {\n        result.parameters = [...result.parameters, ...parameters];\n      }\n      if (displayName) {\n        result.name = displayName;\n      }\n      if (testCaseId) {\n        result.testCaseId = testCaseId;\n      }\n      if (historyId) {\n        result.historyId = historyId;\n      }\n      if (description) {\n        result.description = description;\n      }\n      if (descriptionHtml) {\n        result.descriptionHtml = descriptionHtml;\n      }\n    });\n  };\n\n  #handleStepMetadataMessage = (rootUuid: string, message: RuntimeStepMetadataMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step metadata message: no step is running\");\n      return;\n    }\n    const { name, parameters } = message;\n    this.updateStep(stepUuid, (stepResult) => {\n      if (name) {\n        stepResult.name = name;\n      }\n      if (parameters) {\n        stepResult.parameters = [...stepResult.parameters, ...parameters];\n      }\n    });\n  };\n\n  #handleStartStepMessage = (rootUuid: string, message: RuntimeStartStepMessage[\"data\"]) => {\n    this.startStep(rootUuid, undefined, { ...message });\n  };\n\n  #handleStopStepMessage = (rootUuid: string, message: RuntimeStopStepMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step stop message: no step is running\");\n      return;\n    }\n    this.updateStep(stepUuid, (result) => {\n      if (message.status && !result.status) {\n        result.status = message.status;\n      }\n      if (message.statusDetails) {\n        result.statusDetails = { ...result.statusDetails, ...message.statusDetails };\n      }\n    });\n    this.stopStep(stepUuid, { stop: message.stop });\n  };\n\n  #handleAttachmentContentMessage = (rootUuid: string, message: RuntimeAttachmentContentMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, Buffer.from(message.content, message.encoding), {\n      encoding: message.encoding,\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #handleAttachmentPathMessage = (rootUuid: string, message: RuntimeAttachmentPathMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, message.path, {\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #findParent = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n  ): FixtureResult | TestResult | StepResult | undefined => {\n    const root = this.state.getExecutionItem(rootUuid);\n    if (!root) {\n      return;\n    }\n\n    if (parentStepUuid === null) {\n      return root;\n    } else if (parentStepUuid === undefined) {\n      const stepUuid = this.currentStep(rootUuid);\n      return stepUuid ? this.state.getStepResult(stepUuid) : root;\n    } else {\n      return this.state.getStepResult(parentStepUuid);\n    }\n  };\n\n  #writeFixturesOfScope = ({ fixtures, tests }: TestScope) => {\n    const writtenFixtures = new Set<string>();\n    if (tests.length) {\n      for (const wrappedFixture of fixtures) {\n        if (!writtenFixtures.has(wrappedFixture.uuid)) {\n          this.#writeContainer(tests, wrappedFixture);\n          this.state.deleteFixtureResult(wrappedFixture.uuid);\n          writtenFixtures.add(wrappedFixture.uuid);\n        }\n      }\n    }\n  };\n\n  #writeContainer = (tests: string[], wrappedFixture: FixtureResultWrapper) => {\n    const fixture = wrappedFixture.value;\n    const befores = wrappedFixture.type === \"before\" ? [wrappedFixture.value] : [];\n    const afters = wrappedFixture.type === \"after\" ? [wrappedFixture.value] : [];\n    this.writer.writeGroup({\n      uuid: wrappedFixture.uuid,\n      name: fixture.name,\n      children: [...new Set(tests)],\n      befores,\n      afters,\n    });\n  };\n\n  #calculateTimings = (\n    start?: number,\n    stop?: number,\n    duration?: number,\n  ): {\n    start?: number;\n    stop?: number;\n  } => {\n    const result: { start?: number; stop?: number } = { start, stop };\n    if (duration) {\n      const normalisedDuration = Math.max(0, duration);\n      if (result.stop !== undefined) {\n        result.start = result.stop - normalisedDuration;\n      } else if (result.start !== undefined) {\n        result.stop = result.start + normalisedDuration;\n      } else {\n        result.stop = Date.now();\n        result.start = result.stop - normalisedDuration;\n      }\n    } else {\n      if (result.stop === undefined) {\n        result.stop = Date.now();\n      }\n      if (result.start === undefined) {\n        result.start = result.stop;\n      }\n    }\n    return {\n      start: result.start ? Math.round(result.start) : undefined,\n      stop: result.stop ? Math.round(result.stop) : undefined,\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]}